name: ReleaseMulti

# Note - EXPERIMENTAL WORKFLOW. NOT USED FOR ANY RELEASES. USE OS-SPECIFIC WORKFLOWS
# Concurrent creation of Installers  using beeware-briefcase and github actions
# Generates installers for multiple versions
# Base on official recommendation from beeware project
# https://briefcase.readthedocs.io/en/latest/how-to/ci.html
# Author: Rahul Singh
# https://github.com/codecliff/PhotoGlimmer
# Runs manually, will prompt for release tag

on:
  #push:
  #  branches: [ master ] 
  #pull_request:
  #  branches: [ master ]
  workflow_dispatch:
      inputs: #when run, ask user to input release tag
        reltag:
          description: "tag for release, eg v1.0.0_linux"
          required: true
          default: "latest" 
  #trigger when a relaease tag is pushed . disable this later
  #push:
  #  tags:
  #    - 'v*'  

permissions:  # not in briefcase official     
    contents: write
    pull-requests: write
    repository-projects: write           


# Cancel active CI runs for a PR before starting another run
concurrency:
  group: ${{ github.workflow}}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  FORCE_COLOR: "1"

defaults:
  run:
    shell: bash

jobs:
  ci:
    name: Test and Package
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        target: [ "Ubuntu-22.04", "Ubuntu-24.04"]
        include:
         
          - target: "Ubuntu-22.04"
            platform: "Linux"
            output-format: "system"
            runs-on: "ubuntu-latest"
            pre-command: "sudo apt -y install socat"
            briefcase-run-prefix: "xvfb-run"
            briefcase-args: "--target ubuntu:22.04"

          - target: "Ubuntu-24.04"
            platform: "Linux"
            output-format: "system"
            runs-on: "ubuntu-latest"
            pre-command: "sudo apt -y install socat"
            briefcase-run-prefix: "xvfb-run"
            briefcase-args: "--target ubuntu:24.04"

         

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"  # update with your targeted Python version

      - name: Install Briefcase
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install briefcase

      - name: Setup Environment
        run: |
          
          ${{ matrix.pre-command }}

      - name: Build App
        run: |
          ${{ matrix.briefcase-build-prefix }} \
          briefcase build \
            ${{ matrix.platform || matrix.target }} \
            ${{ matrix.output-format }} \
            --test --no-input --log \
            ${{ matrix.briefcase-args }} \
            ${{ matrix.briefcase-build-args }}

      # - name: Test App
      #   run: |
      #     ${{ matrix.briefcase-run-prefix }} \
      #     briefcase run \
      #       ${{ matrix.platform || matrix.target }} \
      #       ${{ matrix.output-format }} \
      #       --test --no-input --log \
      #       ${{ matrix.briefcase-args }} \
      #       ${{ matrix.briefcase-run-args }}

      - name: Package App
        run: |
          ${{ matrix.briefcase-package-prefix }} \
          briefcase package \
            ${{ matrix.platform || matrix.target }} \
            ${{ matrix.output-format }} \
            --update --adhoc-sign --no-input --log \
            ${{ matrix.briefcase-args }} \
            ${{ matrix.briefcase-package-args }}

      - name: Upload App
        # Briefcase cannot create iOS artefacts; instead, apps
        # must be packaged and published for iOS through Xcode.
        if: matrix.target != 'iOS'
        uses: actions/upload-artifact@v4
        with:
          name: App-${{ matrix.target }}
          path: dist
          if-no-files-found: error

      - name: Upload Log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: Log-Failure-${{ matrix.target }}
          path: logs/*